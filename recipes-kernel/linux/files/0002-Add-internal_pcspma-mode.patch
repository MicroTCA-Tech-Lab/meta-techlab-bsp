From 4345670acdc7e48eb67a61ca7ac9ba4c4e46e49f Mon Sep 17 00:00:00 2001
From: Patrick Huesmann <patrick.huesmann@desy.de>
Date: Fri, 4 Aug 2023 09:43:29 +0200
Subject: [PATCH] macb: Add fixed link support for damc-motctrl

---
 drivers/net/ethernet/cadence/macb.h      |  2 ++
 drivers/net/ethernet/cadence/macb_main.c | 10 ++++++++--
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/cadence/macb.h b/drivers/net/ethernet/cadence/macb.h
index aa60c514254a..1494f30218bb 100644
--- a/drivers/net/ethernet/cadence/macb.h
+++ b/drivers/net/ethernet/cadence/macb.h
@@ -1273,6 +1273,8 @@ struct macb {
 	u32	rx_intr_mask;

 	struct macb_pm_data pm_data;
+
+	bool internal_pcspma;
 };

 #ifdef CONFIG_MACB_USE_HWSTAMP
diff --git a/drivers/net/ethernet/cadence/macb_main.c b/drivers/net/ethernet/cadence/macb_main.c
index d5ceef463fb9..8c3c586e0d10 100644
--- a/drivers/net/ethernet/cadence/macb_main.c
+++ b/drivers/net/ethernet/cadence/macb_main.c
@@ -584,6 +584,9 @@ static void macb_mac_config(struct phylink_config *config, unsigned int mode,
 		if (state->interface == PHY_INTERFACE_MODE_SGMII)
 			ctrl |= GEM_BIT(SGMIIEN) | GEM_BIT(PCSSEL);
 	}
+	if (bp->internal_pcspma) {
+ 		ctrl |= GEM_BIT(SGMIIEN) | GEM_BIT(PCSSEL);
+	}

 	/* Apply the new configuration, if any */
 	if (old_ctrl ^ ctrl)
@@ -2505,6 +2508,8 @@ static void macb_init_hw(struct macb *bp)
 		config |= GEM_BIT(RXCOEN);
 	if (!(bp->dev->flags & IFF_BROADCAST))
 		config |= MACB_BIT(NBC);	/* No BroadCast */
+	if (bp->internal_pcspma)
+ 		config |= GEM_BIT(SGMIIEN) | GEM_BIT(PCSSEL);
 	config |= macb_dbw(bp);
 	macb_writel(bp, NCFGR, config);
 	if ((bp->caps & MACB_CAPS_JUMBO) && bp->jumbo_max_len)
@@ -2513,10 +2518,10 @@ static void macb_init_hw(struct macb *bp)
 	if (bp->caps & MACB_CAPS_JUMBO)
 		bp->rx_frm_len_mask = MACB_RX_JFRMLEN_MASK;

-	if ((bp->phy_interface == PHY_INTERFACE_MODE_SGMII) &&
+	if ((bp->internal_pcspma) &&
 	    (bp->caps & MACB_CAPS_PCS))
 		gem_writel(bp, PCSCNTRL,
-			   gem_readl(bp, PCSCNTRL) | GEM_BIT(PCSAUTONEG));
+			   gem_readl(bp, PCSCNTRL) & ~GEM_BIT(PCSAUTONEG));

 	macb_configure_dma(bp);

@@ -4561,6 +4566,7 @@ static int macb_probe(struct platform_device *pdev)
 	bp->rx_clk = rx_clk;
 	bp->tsu_clk = tsu_clk;
 	bp->jumbo_max_len = macb_config->jumbo_max_len;
+	bp->internal_pcspma = of_property_read_bool(np, "is-internal-pcspma");

 	spin_lock_init(&bp->lock);

--
2.41.0

